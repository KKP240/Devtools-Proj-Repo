version: "3.8"
services:
  # Monolith (optional): keep for reference; prefer new microservices below
  # web:
  #   build: .
  #   command: gunicorn pettech.wsgi:application --bind 0.0.0.0:8000
  #   ports:
  #     - "8000:8000"
  #   env_file:
  #     - .env
  #   depends_on:
  #     - db

  frontend:
    image: nginx:alpine
    ports:
      - "80:80" # ทำให้เราเข้าเว็บได้ทาง http://localhost/
    volumes:
      - ./frontend/public:/usr/share/nginx/html # <-- แก้ไข: Map โฟลเดอร์ public ของคุณเข้าไป
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf # <-- แก้ไข path ตรงนี้

    depends_on:
      - user-service
      - pet-service
      - booking-service
      - job-post-service
      - proposal-service
    restart: unless-stopped


  users-db:
    image: postgres:16-alpine
    volumes:
      - user-postgres-data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=users-db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password

  user-service:
    build:
      context: ./services/user-service
    command: sh -c "python manage.py migrate --noinput && gunicorn user-service.wsgi:application --bind 0.0.0.0:8000"
    

    environment:
      - DJANGO_SETTINGS_MODULE=user-service.settings
      - DB_NAME=users-db
      - DB_USER=postgres
      - DB_PASSWORD=password
      - DB_HOST=users-db
      - DB_PORT=5432
      - SHARED_JWT_SECRET=${SHARED_JWT_SECRET:-dev-shared-jwt-secret}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY:-dev-django-secret}
      - DEBUG=1
    ports:
      - "8001:8000"
    depends_on:
      - users-db
    restart: unless-stopped
    

  pets-db:
    image: postgres:16-alpine
    volumes:
      - pet-postgres-data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=pets-db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password

  pet-service:
    build:
      context: ./services/pet-service
    command: sh -c "python manage.py migrate --noinput && gunicorn pet-service.wsgi:application --bind 0.0.0.0:8000"

    environment:
      - DJANGO_SETTINGS_MODULE=pet-service.settings
      - DB_NAME=pets-db
      - DB_USER=postgres
      - DB_PASSWORD=password
      - DB_HOST=pets-db
      - DB_PORT=5432
      - SHARED_JWT_SECRET=${SHARED_JWT_SECRET:-dev-shared-jwt-secret}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY:-dev-django-secret}
      - DEBUG=1
    ports:
      - "8002:8000"
    depends_on:
      - pets-db
    restart: unless-stopped
    

  bookings-db:
    image: postgres:16-alpine
    volumes:
      - booking-postgres-data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=bookings-db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password

  booking-service:
    build:
      context: ./services/booking-service
    command: sh -c "python manage.py migrate --noinput && gunicorn booking-service.wsgi:application --bind 0.0.0.0:8000"

    environment:
      - DJANGO_SETTINGS_MODULE=booking-service.settings
      - DB_NAME=bookings-db
      - DB_USER=postgres
      - DB_PASSWORD=password
      - DB_HOST=bookings-db
      - DB_PORT=5432
      - SHARED_JWT_SECRET=${SHARED_JWT_SECRET:-dev-shared-jwt-secret}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY:-dev-django-secret}
      - DEBUG=1
    ports:
      - "8003:8000"
    depends_on:
      - bookings-db
    restart: unless-stopped
    

  job-posts-db:
    image: postgres:16-alpine
    volumes:
      - job-post-postgres-data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=job-posts-db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password

  job-post-service:
    build: 
      context: ./services/job-post-service
    command: sh -c "python manage.py migrate --noinput && gunicorn job-post-service.wsgi:application --bind 0.0.0.0:8000"

    volumes:
      - ./services/job-post-service:/app
    ports:
      - "8004:8000"
    environment:
      - DJANGO_SECRET_KEY=your-strong-secret-key
      - DEBUG=1
      - DB_NAME=job-posts-db
      - DB_USER=postgres
      - DB_PASSWORD=password
      - DB_HOST=job-posts-db # <-- ชี้ไปยัง job_post_db
    depends_on:
      - job-posts-db
    restart: unless-stopped


  proposals-db:
    image: postgres:16-alpine
    volumes:
      - proposal-postgres-data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=proposals-db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password

  proposal-service:
    build: 
      context: ./services/proposal-service
    command: sh -c "python manage.py migrate --noinput && gunicorn proposal-service.wsgi:application --bind 0.0.0.0:8000"

    volumes:
      - ./services/proposal-service:/app
    ports:
      - "8005:8000"
    environment:
      - DJANGO_SECRET_KEY=your-strong-secret-key
      - DEBUG=1
      - DB_NAME=proposals-db
      - DB_USER=postgres
      - DB_PASSWORD=password
      - DB_HOST=proposals-db # <-- ชี้ไปยัง proposal_db
    depends_on:
      - proposals-db
    restart: unless-stopped

  # db:
  #   image: postgres:15
  #   environment:
  #     POSTGRES_DB: template1
  #     POSTGRES_USER: postgres
  #     POSTGRES_PASSWORD: postgres
  #   volumes:
  #     - pgdata:/var/lib/postgresql/data
  #     - ./db/init:/docker-entrypoint-initdb.d

volumes:
  user-postgres-data:
  pet-postgres-data:
  booking-postgres-data:
  job-post-postgres-data:
  proposal-postgres-data:
