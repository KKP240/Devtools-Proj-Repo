pipeline {
    agent any

    environment {
        // Remote deployment info
        REMOTE_HOST = 'kittipisphengcham@35.247.173.141'  // เปลี่ยนเป็น username@IP Docker VM จริง
        SSH_CREDENTIALS = 'ssh-prod-instance'             // แก้จาก 'ssh-prod_instance' เป็น hyphen
        REMOTE_APP_DIR = '/opt/pettech'                   // เปลี่ยนเป็น dir จริงบน Docker VM (clone repo ไปที่นี่)
    }

    stages {
        stage('Checkout Source') {
            steps {
                git branch: 'cilent-side-rendering', url: 'https://github.com/KKP240/Devtools-Proj-Repo.git'
                echo "Source code checked out successfully."
            }
        }

        stage('Unit Tests') {
            steps {
                echo "Running Django unit tests..."
                sh '''
                    sudo apt install python3.10-venv -y
                    python3 -m venv venv
                    ./venv/bin/pip install -r requirements.txt
                    cd pettech
                    ../venv/bin/python manage.py test
                '''
            }
            post {
                always {
                    sh 'rm -rf venv'
                }
            }
        }

        stage('Deploy: Build & Run All Services') {
            steps {
                echo "Deploying with docker compose..."
                sshagent([SSH_CREDENTIALS]) {
                    sh """
                        ssh -o StrictHostKeyChecking=no ${REMOTE_HOST} '
                            set -e
                            echo "Changing to app directory..."
                            mkdir -p ${REMOTE_APP_DIR}  # เพิ่ม: สร้าง dir ถ้าไม่มี
                            cd ${REMOTE_APP_DIR}
                            
                            # เพิ่ม: Clone ถ้าไม่มี repo, มิฉะนั้น pull
                            if [ ! -d ".git" ]; then
                                git clone https://github.com/KKP240/Devtools-Proj-Repo.git .
                                git checkout cilent-side-rendering
                            else
                                git checkout cilent-side-rendering
                                git pull origin cilent-side-rendering
                            fi

                            echo "Building all services..."
                            docker compose build

                            echo "Bringing up all containers..."
                            docker compose up -d

                            echo "Running database migrations..."
                            docker compose exec db sleep 10
                            docker compose exec users python manage.py migrate

                            echo "Deployment completed."
                        '
                    """
                }
            }
        }
    }

    post {
        always {
            echo "Pipeline finished."
        }
        success {
            echo "✅ Deployment succeeded."
        }
        failure {
            echo "❌ Deployment failed."
        }
    }
}