pipeline {
    agent any

    environment {
        // ข้อมูลสำคัญและ credential ID ใน Jenkins
        DOCKER_IMAGE    = 'aunnutthawat/pettech:latest'
        REMOTE_HOST     = 'nutthawat@34.126.120.130'
        SSH_CREDENTIALS = 'ssh-prod_instance'
        GIT_REPO        = 'https://github.com/KKP240/Devtools-Proj-Repo.git'
        APP_NAME        = 'pettech'
    }

    stages {

        stage('Checkout from Git') {
            steps {
                echo 'Pulling source code from Git repository...'
                checkout scm
            }
        }

        stage('Install Dependencies & Unit Test') {
            steps {
                echo 'Installing dependencies and running unit tests...'
                sh '''
                    apt install python3.13-venv
                    . venv/bin/activate
                    pip install -r requirements.txt
                    pytest --maxfail=1 --disable-warnings -q
                '''
            }
        }

        stage('Build Docker Image') {
            steps {
                echo 'Building Docker image...'
                sh "docker build -t ${DOCKER_IMAGE} ."
            }
        }

        stage('Login to Docker Hub') {
            steps {
                echo 'Logging into Docker Hub...'
                withCredentials([usernamePassword(credentialsId: 'dockerhub', passwordVariable: 'DOCKERHUB_PASSWORD', usernameVariable: 'DOCKERHUB_USER')]) {
                    sh 'echo $DOCKERHUB_PASSWORD | docker login --username $DOCKERHUB_USER --password-stdin'
                }
            }
        }

        stage('Push Docker Image to Docker Hub') {
            steps {
                echo 'Pushing Docker image to Docker Hub...'
                sh "docker push ${DOCKER_IMAGE}"
            }
        }

        stage('Deploy to Remote Server') {
            steps {
                echo 'Deploying application on remote server...'
                sshagent([SSH_CREDENTIALS]) {
                    sh """
                        ssh -o StrictHostKeyChecking=no ${REMOTE_HOST} '
                            docker stop ${APP_NAME} || true &&
                            docker rm ${APP_NAME} || true &&
                            docker pull ${DOCKER_IMAGE} &&
                            docker run -d --name ${APP_NAME} -p 8085:80 ${DOCKER_IMAGE}
                        '
                    """
                    sh "ssh -o StrictHostKeyChecking=no ${REMOTE_HOST} 'docker ps -a'"
                }
            }
        }
    }

    post {
        success {
            echo '✅ Deployment successful!'
        }
        failure {
            echo '❌ Pipeline failed. Please check the logs.'
        }
    }
}
