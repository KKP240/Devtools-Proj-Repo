server {
    listen 80;
    server_name _;

    # บังคับให้ NGINX ใช้ DNS Resolver ของ Docker
    resolver 127.0.0.11 valid=30s;

    client_max_body_size 20m;

    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-Port $server_port;

    # --- แก้ไขทุก location ให้ใช้ตัวแปร ---

    server {
    listen 80;
    server_name _;

    # บังคับให้ NGINX ใช้ DNS Resolver ของ Docker
    resolver 127.0.0.11 valid=30s;

    client_max_body_size 20m;

    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-Port $server_port;

    location / {
        # API routes จะถูกจับคู่โดย location ที่เฉพาะเจาะจงกว่าก่อน
        # ดังนั้น location นี้จะทำหน้าที่เป็น fallback สำหรับหน้าเว็บปกติทั้งหมด
        set $upstream_server http://web:8000;
        proxy_pass $upstream_server$request_uri;
    }

    location /api/me/ {
        set $upstream_server http://users:8000;
        proxy_pass $upstream_server$request_uri;
    }
    location /api/job-posts/ {
        set $upstream_server http://jobs:8000;
        proxy_pass $upstream_server$request_uri;
    }
    location /api/bookings/ {
        set $upstream_server http://bookings:8000;
        proxy_pass $upstream_server$request_uri;
    }
    location /api/booking-history/ {
        set $upstream_server http://bookings:8000;
        proxy_pass $upstream_server$request_uri;
    }
    location /api/reviews/ {
        set $upstream_server http://bookings:8000;
        proxy_pass $upstream_server$request_uri;
    }
    location /api/caregiver/ {
        set $upstream_server http://bookings:8000;
        proxy_pass $upstream_server$request_uri;
    }
    location /api/my-proposals/ {
        set $upstream_server http://jobs:8000;
        proxy_pass $upstream_server$request_uri;
    }
}

    # Static/media -> web service
    location /static/ {
        set $upstream_server http://web:8000;
        proxy_pass $upstream_server/static/;
    }
    location /media/ {
        set $upstream_server http://web:8000;
        proxy_pass $upstream_server/media/;
    }
}